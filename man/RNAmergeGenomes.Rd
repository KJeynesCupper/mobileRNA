% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RNAmergeGenomes.R
\name{RNAmergeGenomes}
\alias{RNAmergeGenomes}
\title{Merge two FASTA genome assemblies}
\usage{
RNAmergeGenomes(
  genomeA,
  genomeB,
  output_file,
  abbreviationGenomeA = "A",
  abbreviationGenomeB = "B",
  BPPARAM = BiocParallel::SerialParam()
)
}
\arguments{
\item{genomeA}{path; directory path to a genome reference assembly file in
FASTA format (.fa/.fasta).}

\item{genomeB}{path; directory path to a genome reference assembly file in
FASTA format (.fa/.fasta).}

\item{output_file}{path; a character string or a \code{base::connections()} open
for writing. Including file output name, and file extension of \code{.fa}.}

\item{abbreviationGenomeA}{character; string to represent prefix added to
existing chromosome names in \code{genomeA}. Default set as "A", which is
separated from existing chromosome names by an underscore (_).}

\item{abbreviationGenomeB}{character; string to represent prefix added to
existing chromosome names in \code{genomeB}. Default set as "B", which is
separated from existing chromosome names by an underscore (_).}

\item{BPPARAM}{An optional \code{\link[=BiocParallelParam]{BiocParallelParam()}} instance determining the
parallel back-end to be used during evaluation, or a list of BiocParallelParam
instances, to be applied in sequence for nested calls to \emph{BiocParallel}
functions.}
}
\value{
Returns a single FASTA format file containing both  genome assemblies
with edited chromosome names (prefixes, and removal of periods) to the give
directory.
}
\description{
Merges two reference genomes (.fa/.fasta). into one single
reference with modified chromosome names to ensure distinguishability.
}
\details{
The function merges two FASTA files, however, when merging genomic files it
is critical that the two genomes are distinguishable by the chromosome names.
As a default setting, the function extracts the chromosome names for the
given FASTA files and alters adds a unique prefix while retaining the
identifying number.

The function requires the input of two FASTA reference genomes, where one
represents \code{genome_A} and the other represents \code{genome_B}. As default, the
function will rename the chromosome names in \code{genome_A} to "A_". For example,
A_0, A_1, A_2 etc. To set a custom chromosome name for \code{genome_A} alter the
argument \code{abbreviationGenomeA}. While, for  \code{genome_B} as default the
chromosome names will be named "B_", for example, B_0, B_1, B_2 etc. To set a
custom chromosome name for \code{genome_B} alter the argument
\code{abbreviationGenomeB}.  Please note that the underscore is added
automatically, hence, when setting a custom prefix just include character
values.

Please be aware that this function will take a very long time to process if
you are working with large genomes which together take up more than 1Gb
storage. Please be patient and allow the function to run.

Please note that this function uses parallel computation to improve the
processing speed.

\emph{IMPORTANT:}  The genome reference and annotation of the same
species/accession/variety must have chromosomes with matching names. It is
critical that if you use the \code{\link[=RNAmergeAnnotations]{RNAmergeAnnotations()}} function to
create a merged genome annotation,that you treat the input references in the
same way.
}
\examples{

# Initialize a cache directory, using the BiocFileCache package, to store the 
# downloads used in this example
library(BiocFileCache)
cache_dir <- tools::R_user_dir("mobileRNA", which = "cache")
cache <- BiocFileCache(cache_dir)


# Construct URL to example FASTA files
url_remote <- "https://github.com/KJeynesCupper/assemblies/raw/main/"

fasta_1_url <- file.path(url_remote, "chr12_Eggplant_V4.1.fa.gz")
fasta_2_url <- file.path(url_remote,"chr2_S_lycopersicum_chromosomes.4.00.fa.gz")

# Download example FASTA files and add them to cache
fasta_1 <- bfcrpath(cache, fasta_1_url)
fasta_2 <- bfcrpath(cache, fasta_2_url)


# Merge FASTA files and write them to a file in output_file.
# For this example, the result is written to a temporary file.
# For real use cases, the output_file should be an appropriate location on your 
# computer.

output_file <- tempfile("merged_annotation", fileext = ".fa")

merged_ref <- RNAmergeGenomes(genomeA = fasta_1, 
genomeB = fasta_2,
output_file = output_file)
            
}
