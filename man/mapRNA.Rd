% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mapRNA.R
\name{mapRNA}
\alias{mapRNA}
\title{mobileRNA pre-processing of sRNAseq & mRNAseq (alignment, raw count or cluster analysis)}
\usage{
mapRNA(
  input = c("mRNA", "sRNA"),
  sampleData = NULL,
  tidy = TRUE,
  input_files_dir,
  output_dir,
  genomefile,
  annotationfile = NULL,
  condaenv,
  threads = 6,
  mmap = "n",
  dicermin = 20,
  dicermax = 24,
  mincov = 0.5,
  pad = 200,
  order = "pos",
  stranded = "no",
  a = 10,
  mode = "union",
  nonunique = "none",
  type = "mRNA",
  idattr = "Name"
)
}
\arguments{
\item{input}{string; define type of Next-Generation Sequencing dataset.
"sRNA" for sRNAseq data and "mRNA" for mRNAseq data.}

\item{sampleData}{dataframe; stores mRNA sample data where rows represent
each sample in the analysis. Column one stores the sample names, while column
two stores the the name(s) of the fastq file(s) for mate 1 (e.g. flyA_1.fq,
flyB_1.fq) and column three stores the the name(s) of the fastq file(s) for
mate 2 (e.g. flyA_2.fq,flyB_2.fq). If data is single ended, column three
will not hold any values. Only for mRNA analysis.}

\item{tidy}{logical; removes unnecessary extra output files when set to TRUE.}

\item{input_files_dir}{path; directory containing only the FASTQ samples for
analysis. Note that all samples in this directory will be used by this
function.}

\item{output_dir}{path; directory to store output.}

\item{genomefile}{path; path to a FASTA genome referecne file.}

\item{annotationfile}{path; path to a GFF file. For mRNA analysis only.}

\item{condaenv}{character; name or directory of the Conda environment to use
where OS dependencies are stored.}

\item{threads}{numeric; set the number of threads to use where more threads
means a faster completion time. Default is 6.}

\item{mmap}{character; define how to handle multi-mapped reads. Choose from
"u", "f" , "r" or "n". For core sRNA analysis, use either "u", "f" or "r"
options. Where "u" means only uniquely-aligned reads are used as
weights for placement of multi-mapped reads. Where "f" means fractional
weighting scheme for placement of multi-mapped reads and "r" mean
multi-mapped read placement is random. While for mobile sRNAseq, it is
important to use "n", to not consider multi-mapped reads, only unique reads
as we cannot distinguish which genome the reads mapped to multiple locations
in. While the mRNA pipeline only uses uniquely mapped reads.}

\item{dicermin}{integer; the minimum size in nucleotides of a valid small
RNA. This option sets the bounds to discriminate dicer-derived small RNA loci
from other loci. Default is 20. For sRNA analysis only.}

\item{dicermax}{integer; the maximum size in nucleotides of a valid small
RNA. This option sets the bounds to discriminate dicer-derived small RNA loci
from other loci. Default is 24. For sRNA analysis only.}

\item{mincov}{numeric; minimum alignment depth, in units of reads per
million, required to nucleate a small RNA cluster during de novo cluster
search. Must be a number > 0. Default is 2. For sRNA analysis only.}

\item{pad}{integer; initial peaks are merged if they are this distance or
less from each other. Must >= 1, default is 75. For sRNA analysis only.}

\item{order}{character; either "name" or "pos" to indicate how the input data
has been sorted. For paired-end data only, this sorts the data either by
read name or by alignment position. Default is "pos", to sort by position.
For mRNA analysis only.}

\item{stranded}{whether the data is from a strand-specific assay, either
"yes"/"no"/"reverse". Default is "no".  For mRNA analysis only.}

\item{a}{numeric; skip all reads with alignment quality lower than the given
minimum value (default: 10). For mRNA analysis only.}

\item{mode}{character; states mode to handle reads overlapping more than one
feature. Either "union", "intersection-strict" and "intersection-nonempty".
Default is "union". For mRNA analysis only.}

\item{nonunique}{character; states the mode to handle reads that align to or
are assigned to more than one feature in the overlap. Either "none" and
"all". Default is "none". For mobile mRNA, ensure the default is utilized to
exclude multimapped reads. For mRNA analysis only.}

\item{type}{character; feature type (3rd column in GFF file) to be used,
all features of other type are ignored. Default is "mRNA".
For mRNA analysis only.}

\item{idattr}{character; GFF attribute to be used as feature ID. Several GFF
lines with the same feature ID will be considered as parts of the same
feature. The feature ID is used to identity the counts in the output table.
Default is "Name". For mRNA analysis only.}
}
\value{
** For sRNA analysis**
The OS commands generate output into the users desired location, generating
two folders:
\itemize{
\item "1_de_novo_detection" : Stores output from the detection of de novo sRNA-producing loci
\item "2_alignment_results" : Stores output from alignment
}

The first folder stores the novo detection of sRNA-producing loci and
alignment files, where the output of each sample are stored in a named
folder. The de novo detection of sRNA-producing loci analyses each sample to
identify de novo sRNA-producing loci (ie. sRNA clusters), and joins these
results into a single file called "locifile.txt".
The second folder stores the alignment and clustering results for each sample
to the genome reference along with the file containing the de novo sRNA
clusters. The output of each sample is stored within its own sample folder.

The alignment results generate one folder per sample, where the results
are stored. As default this includes the alignment files (BAM) and
sRNA results (.txt). The sRNA results (.txt) are imported into R for
downstream analysis by utilizing the \code{\link[=RNAimport]{RNAimport()}} function.

The function generates a number of extra files for each sample and are not
required for the downstream analysis. See \code{ShortStack} documentation for more
information (\url{https://github.com/MikeAxtell/ShortStack}). As default
these files are deleted. This is determined by the \code{tidy} argument.

** For mRNA analysis**
For mRNA analysis, generate a new folder which stores the results in the
users desired output location, known as "1_mRNA_preprocessing". Within this
folder, there will contain one folder per sample storing it's sorted
alignment file (BAM) and raw counts file ("Result.txt"). Note, that the
function excludes multi-mapped mRNAs.
}
\description{
The mobileRNA workflow includes specific pre-processing
guidelines. For sRNAseq, this undertakes alignment with Bowtie and sRNA
cluster analysis with ShortStack. For mRNAseq, this undertakes alignment with
HISAT2 and HTSeq. All OS software should be installed within a Conda
environment.
}
\details{
Please ensure all OS software is installed within a Conda environment.
See appendix of vignette for manual pipeline. Alignment statistics are
reported for each analysis.

** For sRNA analysis**
The function invokes a number of OS commands, and is dependent
on the installation of \code{ShortStack} (>= 4.0) with Conda. Please note that
\code{ShortStack} is only compatible with Linux and Mac operating systems.

The pipeline undertakes de novo detection of sRNA-producing loci and
alignment, where the output of each are stored in their respective folders in
the users desired location. The de novo detection of sRNA-producing loci
analyses each sample to identify de novo sRNA-producing loci (ie. sRNA
clusters), and joins these results into a single file called "locifile.txt".
The alignment step aligns and clusters each sample to the genome reference
along with the file containing the de novo sRNA clusters. The final reports
are imported into R using \code{\link[=RNAimport]{RNAimport()}}.

** For mRNA analysis**
The function invokes a number of OS commands, and is dependent
on the installation of \code{HISAT2},  \code{HTSeq} and \code{SAMtools} with Conda.
The pipeline can undertake single- or pair-end analysis, and to do so
requires a dataframe stating the sample information where each row
represents a sample. The cleaned reads are mapped using HISAT and then the
raw counts are estimated by HTSeq.
}
\examples{
\dontrun{
samples <- file.path(system.file("extdata/sRNAseq",package="mobileRNA"))

output_location <- tempdir()

mapRNA(input = "sRNA", 
input_files_dir = samples, 
output_dir = output_location, 
genomefile = output_assembly_file,
condaenv = "ShortStack4", 
mmap = "n")
}

}
\references{
\url{"https://github.com/MikeAxtell/ShortStack"},
\url{https://anaconda.org/bioconda/hisat2},
\url{https://anaconda.org/bioconda/htseq},
\url{https://anaconda.org/bioconda/samtools}
}
