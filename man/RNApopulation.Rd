% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RNApopulation.R
\name{RNApopulation}
\alias{RNApopulation}
\title{Identify unique sRNA populations between treatment and control conditions}
\usage{
RNApopulation(
  data,
  conditions,
  statistical = FALSE,
  padj = 0.05,
  p.value = NULL,
  chimeric = FALSE,
  controls = NULL,
  genome.ID = NULL,
  dual = TRUE
)
}
\arguments{
\item{data}{Numeric data frame}

\item{conditions}{Character vector; containing names of samples within
conditions to locate unique sRNA clusters.}

\item{statistical}{If TRUE, will undertake statistical filtering based on the
a p-value or adjusted p-value threshold stated by \code{padj} & \code{p.value}.Default
set at FALSE. Requires presence of columns containing statistical data.
In order to filter by the adjusted p-value, a column named \code{padjusted} must
be present. Similarly, to filter by the p-value, a column named \code{pvalue} must
be present. See \code{\link[=RNAdifferentialAnalysis]{RNAdifferentialAnalysis()}} to calculate
statistical values.}

\item{padj}{A user defined numeric value to represent the adjusted p-value
threshold to define statistic significance. Defaults set at 0.05.Only mobile
molecules with adjusted p-values equal or lower than specified are returned.}

\item{p.value}{A user defined numeric value to represent the p-value
threshold to define statistic significance. There is no default value, set
this instead of using an adjusted p-value to filter molecules. Only mobile
molecules with p-values equal or lower than specified are returned.}

\item{chimeric}{logical; state whether system is chimeric: contains multiple
genomes/genotypes.}

\item{controls}{character; vector of control condition sample names.}

\item{genome.ID}{character; chromosome identifier of foreign genome in chimeric
system}

\item{dual}{logical; works in corporation when \code{chimeric=TRUE} and removes
sRNA clusters mapped to the foreign genome.}
}
\value{
A refined version of the working dataframe supplied to the function.
The function selects sRNA clusters which are only found in replicates within
the same condition supplied to the \code{conditions} argument and not in other
replicates within the dataset.

Selection of sRNA clusters which meet the statistical threshold can be
included, given the statistical analysis has been undertaken using the
\code{\link[=RNAdifferentialAnalysis]{RNAdifferentialAnalysis()}} function.
}
\description{
Identify unique sRNA populations between two conditions.
}
\details{
Please be aware that if you have a large dataset, this function may take a
couple of minutes.

The function undertakes two different roles. First, it identified whether
there are unique sRNA clusters within one condition in comparison to another.
For instance, if there are additional sRNA clusters in your treatment
which are not found in your control samples. Keep in mind, this function does
not consider the genome of origin unlike the \code{\link[=RNAmobile]{RNAmobile()}}
function.

The second role involves filtering the data based on statistical significance
which has been calculated by the \code{\link[=RNAdifferentialAnalysis]{RNAdifferentialAnalysis()}}
function. This optional features enables the user to select sRNA clusters
which meet a specific p-value or adjusted p-values threshold.

When working with a chimeric system, for example interspecific grafting,
mapping errors can easily be recognised and eliminated. Here, these can be
eliminated by supplying some extra parameter information. State
\code{chimeric=TRUE} and supply the chromosome identifier of the foreign genome
(ie. not the tissue sample genotype, but the genotype from which any
potential mobile molecules could be traveling from) to the \code{genome.ID}
parameter & the control condition samples names to the \code{controls} parameter.
}
\examples{

data("sRNA_data_consensus")

# vector of control names
reps <- c("heterograft_1", "heterograft_2" , "heterograft_3")

heterograft_pop <- RNApopulation(data = sRNA_data_consensus, 
                                 conditions = reps)
                                 
                                 

}
