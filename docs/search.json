[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 mobileRNA authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Katie Jeynes-Cupper. Maintainer, author. Marco Catoni. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jeynes-Cupper K, Catoni M (2023). mobileRNA: Identify mobile RNA molecules plant graft systems. R package version 1.0.0, https://github.com/KJeynesCupper/mobileRNA.git.","code":"@Manual{,   title = {mobileRNA: Identify mobile RNA molecules in plant graft systems},   author = {Katie Jeynes-Cupper and Marco Catoni},   year = {2023},   note = {R package version 1.0.0},   url = {https://github.com/KJeynesCupper/mobileRNA.git}, }"},{"path":[]},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Identify mobile RNA molecules in plant graft systems ","text":"mobileRNA R package provides pipeline rapid identification endogenous mobile RNA molecules plant graft systems. tool provides pipeline pre-processing analysis sRNA mRNA sequencing data. established many different substances molecules including RNAs can travel across graft junction. Plant heterograft systems comprised two genotypes joined graft junction; hence, molecules produces encoded genotype can move across graft junction exchanged. molecules implications regulation gene expression trait acquisition. Current methods utilise step-wise mapping samples genome within graft system. , introduce new mapping method align sample replicates merge genome reference comprised genome assemblies relating genotypes heterograft system.","code":""},{"path":"/index.html","id":"author","dir":"","previous_headings":"","what":"Author","title":"Identify mobile RNA molecules in plant graft systems ","text":"Katie Jeynes-Cupper, University Birmingham, kej031@student.bham.ac.uk","code":""},{"path":"/index.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of Contents","title":"Identify mobile RNA molecules in plant graft systems ","text":"Installation Loading test data Getting help Pre-mapping Mapping Post-mapping analysis Output","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Identify mobile RNA molecules in plant graft systems ","text":"latest version package can install directly GitHub repo:","code":"if (!require(\"devtools\")) install.packages(\"devtools\") devtools::install_github(\"KJeynesCupper/mobileRNA\", branch = \"main\")"},{"path":"/index.html","id":"loading-test-data","dir":"","previous_headings":"","what":"Loading test data","title":"Identify mobile RNA molecules in plant graft systems ","text":"simulate usage package, grafting data set, tomato-eggplant grafting experiment. data already undertaken pre-mapping mapping steps (pre-processing) can found sRNA_data. data set already organised RNAimport() function available package. load data set, use following command:","code":"data(\"sRNA_data\")"},{"path":"/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"Identify mobile RNA molecules in plant graft systems ","text":"additional information function, please read documentation mobileRNA package typing ? help operator function names package using help() function. -depth step--step analysis, consider reading vignette provided package:","code":"vignette(\"mobileRNA\")"},{"path":[]},{"path":"/index.html","id":"pre-mapping","dir":"","previous_headings":"","what":"Pre-mapping","title":"Identify mobile RNA molecules in plant graft systems ","text":"Raw fastq files trimmed remove adapter sequences low quality reads per best practice. recommend installing ShortStack (https://github.com/MikeAxtell/ShortStack) program align cluster sRNA-seq samples. program formulated sRNA-seq analysis, utilising Bowtie custom clustering algorithm. , introduce mapping method utilising merged genome reference, comprised genome assemblies relating genotypes heterograft system. mobileRNA offers function merge two FASTA reference genomes one. ensure two genomes distinguishable within merged file, function added prefix chromosome name. standard, string “A_” added reference genome supplied “genomeA” “B_” added reference genome supplied “genomeB”. can customised users preference, see manual information.","code":"merged_reference <- mobileRNA::RNAmergeGenomes(genomeA = \"./workplace/reference/ref1.fa\",                                     genomeB = \"./workplace/reference/ref2.fa\",                         out_dir = \"./workplace/reference/merge/merged_ref.fa\")"},{"path":[]},{"path":"/index.html","id":"srna-seq-mapping-with-shortstack","dir":"","previous_headings":"Mapping","what":"sRNA-seq Mapping with ShortStack","title":"Identify mobile RNA molecules in plant graft systems ","text":", recommend double-mapping process using ShortStack, steps follow:","code":""},{"path":"/index.html","id":"step-1---identify-loci-of-dicer-derived-srna-cluster-in-each-sample","dir":"","previous_headings":"Mapping > sRNA-seq Mapping with ShortStack","what":"Step 1 - Identify loci of dicer-derived sRNA cluster in each sample","title":"Identify mobile RNA molecules in plant graft systems ","text":"","code":"ShortStack \\ --readfile <control_1.fastq> \\ --genomefile <merged_reference.fa> \\ --bowtie_cores 6 \\ --mmap n \\ --mismatches 0 \\ --nohp \\ --outdir <./output/directory>"},{"path":"/index.html","id":"step-2---uniquely-map-samples-to-all-loci-of-identified-srna-clusters","dir":"","previous_headings":"Mapping > sRNA-seq Mapping with ShortStack","what":"Step 2 - Uniquely map samples to all loci of identified sRNA clusters","title":"Identify mobile RNA molecules in plant graft systems ","text":"Using output Step 1, RNAloci() function can collate loci information single .txt file can utilised ShortStack finally mapping step locifile argument. sample mapped merged reference genome annotation file containing cluster loci analyse.","code":"sample_names <- c(\"<treatment_1>\", \"<treatment_2>\", \"<control_1>\",\"<control_2>\")  folder <- <./output/directory/from/step/1/> save_folder <- <./output/directory/ClustersInfo.txt>   loci_info <- mobileRNA::RNAloci(files = folder,               out = save_folder,              samples = sample_names) ShortStack \\ --readfile <control_1.fastq> \\ --genomefile <merged_reference.fa> \\ --locifile <./output/directory/ClustersInfo.gff3> \\ --bowtie_cores 6 \\ --mmap n \\ --mismatches 0 \\ --nohp \\ --mincov 5 \\ --outdir <./output/directory/step2/>"},{"path":"/index.html","id":"post-mapping-analysis","dir":"","previous_headings":"","what":"Post-mapping analysis","title":"Identify mobile RNA molecules in plant graft systems ","text":"aligned data can now analysed R, potential mobile sRNA can identified.","code":""},{"path":"/index.html","id":"step-1-import-data","dir":"","previous_headings":"Post-mapping analysis","what":"Step 1: Import data","title":"Identify mobile RNA molecules in plant graft systems ","text":"State location mapping results, sample names sRNA cluster loci annotation file.","code":"# Directory containing results results_dir <-  \"<./output/directory/step2/>\"  # Sample names and total number of reads, in the same order.  sample_names <- c(\"<treatment_1>\", \"<treatment_2>\", \"<control_1>\",\"<control_2>\")   sRNA_data <- mobileRNA::RNAimport(directory = results_dir,                                   samples = sample_names)"},{"path":"/index.html","id":"step-2-calculate-the-consensus-of-each-srna-cluster","dir":"","previous_headings":"Post-mapping analysis","what":"Step 2: Calculate the consensus of each sRNA cluster","title":"Identify mobile RNA molecules in plant graft systems ","text":"given sRNA cluster, replicate determined class (20-24nt) based abundant small RNA size. Replicates within condition expected class given sRNA similarly. RNAconsensus() function used define class sRNA cluster based consensus across specific replicates. identify forigen mobile sRNAs, recommended base consensus call heterograft samples. ensure sRNA class accurately defined genotype originates . , replicates “treatment_1” “treatment_2” represent two heterograft samples, “control_1” “control_2” represent self-graft samples.","code":"samples <- c(\"<treatment_1>\", \"<treatment_2>\")  sRNA_data_summary <- mobileRNA::RNAconsensus(data = sRNA_data,                                   conditions = samples,                                   tidy=TRUE)"},{"path":"/index.html","id":"step-3-identify-potential-mobile-srna","dir":"","previous_headings":"Post-mapping analysis","what":"Step 3: Identify potential mobile sRNA","title":"Identify mobile RNA molecules in plant graft systems ","text":"Finally, RNAmobile() function filters dataset retain sRNA clusters mapped -genome. important, genome distinguishable chromosome names, hence, example -genome contains “” chromosome number.","code":"# define control samples controls <- c(\"<control_1>\", \"<control_2>\")  mobile <- mobileRNA::RNAmobile(data = sRNA_data_summary,                      controls = controls,                     id = \"A\",                      task = \"keep\")  # output dataframe containing potentially mobile sRNAs output <- mobile  # save output as txt file  write.table(output, \"./output.txt\")"},{"path":"/index.html","id":"output","dir":"","previous_headings":"","what":"Output","title":"Identify mobile RNA molecules in plant graft systems ","text":"dataframe rows represent potential mobile sRNA clusters. columns include information cluster, individual sample replicates, .","code":""},{"path":"/index.html","id":"information-on-the-cluster","dir":"","previous_headings":"Output","what":"Information on the cluster:","title":"Identify mobile RNA molecules in plant graft systems ","text":"chr: Name chromosome scaffold start : Start position cluster end : End position cluster width : Length locus (base-pairs)","code":""},{"path":"/index.html","id":"information-on-each-sample-replicate","dir":"","previous_headings":"Output","what":"Information on each sample replicate:","title":"Identify mobile RNA molecules in plant graft systems ","text":"cluster: Cluster Name Dicer-call : size abundant small RNA size Count : Number uniquely aligned (e.g. multi-mapping) reads overlap locus. RPM : Reads per Million","code":""},{"path":"/index.html","id":"other-information","dir":"","previous_headings":"Output","what":"Other information","title":"Identify mobile RNA molecules in plant graft systems ","text":"sRNA_Consensus : Consensus sRNA class calculated RNAconsensus() annotation file imported overlapped using RNAimport(), parameter - source : name program generated feature, data source (database project name) - feature : feature type name, e.g. Gene, Variation, Similarity - score : floating point value - strand : defined + (forward) - (reverse) - frame : One ‘0’, ‘1’ ‘2’. ‘0’ indicates first base feature first base codon, ‘1’ second base first base codon, - attribute : semicolon-separated list tag-value pairs, providing additional information feature. differential expression analysis undertaken withRNAanalysis(): - log2FoldChange : Log2FoldChange–effect size estimate - pvalue : P value, probability assumption effect difference, obtaining result equal extreme actually observed - padjusted : p-value adjustment - logCPM : log counts per million, measure expression level mean RPM Count calculated RNAmean(): - mean_RPM : mean RPM, based parameters - mean_Count : mean counts, based parameters ———————————————————————— Last updated: 15-05-2023","code":""},{"path":"/reference/RNAanalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression (DE) Analysis of sRNA dicer-derived clusters\nusing `DESeq2` or `edgeR` — RNAanalysis","title":"Differential Expression (DE) Analysis of sRNA dicer-derived clusters\nusing `DESeq2` or `edgeR` — RNAanalysis","text":"function allows compute differential expression sRNA dicer-derived clusters. function allows choice analysis `DESeq2` `edgeR`.","code":""},{"path":"/reference/RNAanalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression (DE) Analysis of sRNA dicer-derived clusters\nusing `DESeq2` or `edgeR` — RNAanalysis","text":"","code":"RNAanalysis(data, group, method = c(\"edgeR\", \"DESeq2\"), dispersionValue = NULL)"},{"path":"/reference/RNAanalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression (DE) Analysis of sRNA dicer-derived clusters\nusing `DESeq2` or `edgeR` — RNAanalysis","text":"data numeric data frame produced [mobileRNA::RNAimport()] /[mobileRNA::RNAsubset()]. group Vector condition (ie. treatment control) sample. Must stated order samples `data` file left right. method method undertaken differential analysis, choose methods either [DESeq2::DESeq2] [edgeR::edgeR]. Must stated either \"DESeq2\" \"edgeR\" function. dispersionValue numeric value; manual setting dispersion value recommended analysis experiments without biological replicates utilising [edgeR::edgeR] method.","code":""},{"path":"/reference/RNAanalysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression (DE) Analysis of sRNA dicer-derived clusters\nusing `DESeq2` or `edgeR` — RNAanalysis","text":"Undertakes differential analysis, based specified method, adds results supplied dataframe. includes: * Count mean * Log fold change * p-value * Adjusted p-value * Log counts per million (CPM/RPM)","code":""},{"path":"/reference/RNAanalysis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression (DE) Analysis of sRNA dicer-derived clusters\nusing `DESeq2` or `edgeR` — RNAanalysis","text":"analysis allows users choose method best suits data. Notably, `DESeq2` compute analysis one replicate per condition, , `edgeR` can. Simply set suitable dispersion value, based similar data, use feature. dispersion value wise known common Biological squared coefficient variation. typical dispersion value 0.4 human data sets, 0.1  data genetically identical model organisms 0.01 technical replicate. See User’s Guide  ‘EdgeR’ package details, [edgeR::edgeR].","code":""},{"path":"/reference/RNAanalysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression (DE) Analysis of sRNA dicer-derived clusters\nusing `DESeq2` or `edgeR` — RNAanalysis","text":"","code":"# sample conditions. groups <- c(\"Tomato/Eggplant\", \"Tomato/Eggplant\", \"Tomato/Eggplant\",           \"Tomato/Tomato\", \"Tomato/Tomato\", \"Tomato/Tomato\")   ## Differential analysis: DEseq2 method # 24-nt sRNA data-set sRNA_24_DESeq2 <- RNAanalysis(data = sRNA_24,                              group = groups,                              method = \"DESeq2\" ) #>   Note: levels of factors in the design contain characters other than #>   letters, numbers, '_' and '.'. It is recommended (but not required) to use #>   only letters, numbers, and delimiters '_' or '.', as these are safe characters #>   for column names in R. [This is a message, not a warning or an error] #>   Note: levels of factors in the design contain characters other than #>   letters, numbers, '_' and '.'. It is recommended (but not required) to use #>   only letters, numbers, and delimiters '_' or '.', as these are safe characters #>   for column names in R. [This is a message, not a warning or an error] #> using pre-existing size factors #> estimating dispersions #> gene-wise dispersion estimates #> mean-dispersion relationship #>   Note: levels of factors in the design contain characters other than #>   letters, numbers, '_' and '.'. It is recommended (but not required) to use #>   only letters, numbers, and delimiters '_' or '.', as these are safe characters #>   for column names in R. [This is a message, not a warning or an error] #> final dispersion estimates #>   Note: levels of factors in the design contain characters other than #>   letters, numbers, '_' and '.'. It is recommended (but not required) to use #>   only letters, numbers, and delimiters '_' or '.', as these are safe characters #>   for column names in R. [This is a message, not a warning or an error] #> fitting model and testing # 2122-nt sRNA data-set sRNA_2122_DESeq2 <- RNAanalysis(data = sRNA_2122,                                group = groups,                                method = \"DESeq2\") #>   Note: levels of factors in the design contain characters other than #>   letters, numbers, '_' and '.'. It is recommended (but not required) to use #>   only letters, numbers, and delimiters '_' or '.', as these are safe characters #>   for column names in R. [This is a message, not a warning or an error] #>   Note: levels of factors in the design contain characters other than #>   letters, numbers, '_' and '.'. It is recommended (but not required) to use #>   only letters, numbers, and delimiters '_' or '.', as these are safe characters #>   for column names in R. [This is a message, not a warning or an error] #> using pre-existing size factors #> estimating dispersions #> gene-wise dispersion estimates #> mean-dispersion relationship #>   Note: levels of factors in the design contain characters other than #>   letters, numbers, '_' and '.'. It is recommended (but not required) to use #>   only letters, numbers, and delimiters '_' or '.', as these are safe characters #>   for column names in R. [This is a message, not a warning or an error] #> final dispersion estimates #>   Note: levels of factors in the design contain characters other than #>   letters, numbers, '_' and '.'. It is recommended (but not required) to use #>   only letters, numbers, and delimiters '_' or '.', as these are safe characters #>   for column names in R. [This is a message, not a warning or an error] #> fitting model and testing   ## Differential analysis: edgeR method sRNA_24_edgeR <- RNAanalysis(data = sRNA_24,                             group = groups,                             method = \"edgeR\" ) #> Design matrix not provided. Switch to the classic mode.  sRNA_2122_edgeR <- RNAanalysis(data = sRNA_2122 ,                               group = groups,                               method = \"edgeR\" ) #> Design matrix not provided. Switch to the classic mode."},{"path":"/reference/RNAattributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify specific attributes associated to a sRNA cluster — RNAattributes","title":"Identify specific attributes associated to a sRNA cluster — RNAattributes","text":"Based genomic coordinates, assign sRNA clusters annotation exact match based chromosome number, start end coordinates","code":""},{"path":"/reference/RNAattributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify specific attributes associated to a sRNA cluster — RNAattributes","text":"","code":"RNAattributes(data, annotation)"},{"path":"/reference/RNAattributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify specific attributes associated to a sRNA cluster — RNAattributes","text":"data data frame; containing rows potential dicer-derived clusters including columns supply genomic coordinates, `chr` supplies chromosome number, `start` `end` supply coordinates. annotation path, URL, connection GFFFile object. genome reference annotation file (.gff/.gff1/.gff2/.gff3).","code":""},{"path":"/reference/RNAattributes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify specific attributes associated to a sRNA cluster — RNAattributes","text":"function merges annotation (.gff/.gff3) file sRNA data set based chromosome, start end coordinates. important alteration made genome reference (FASTA), alterations chromosome name, must carried forth genome annotation file. alterations made reference genome using [mobileRNA::RNAmergeGenomes()] function, alteration inline can accomplished using [mobileRNA::RNAmergeAnnotations()] function.","code":""},{"path":"/reference/RNAconsensus.html","id":null,"dir":"Reference","previous_headings":"","what":"Define the sRNA consensus for each dicer-derived cluster — RNAconsensus","title":"Define the sRNA consensus for each dicer-derived cluster — RNAconsensus","text":"Using data, function uses supplied data frame adds additional column stating consensus sRNA class/type dicer-derived cluster.","code":""},{"path":"/reference/RNAconsensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define the sRNA consensus for each dicer-derived cluster — RNAconsensus","text":"","code":"RNAconsensus(data, conditions, tidy = TRUE)"},{"path":"/reference/RNAconsensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define the sRNA consensus for each dicer-derived cluster — RNAconsensus","text":"data data frame object containing sample data rows represent sRNA dicer-derived clusters, columns represent sample data. See [mobileRNA::RNAimport()] load data, extract required information sample organise required. conditions character vector containing names sample replicates base consensus . string represent sample name already utilised analysis present data frame supplied `data` argument. tidy use argument remove sRNA clusters unknown unclassified consensus result. default, function tidy data remove unclassified clusters remove excess noise data set. retain background background noise, set tidy=FALSE.","code":""},{"path":"/reference/RNAconsensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define the sRNA consensus for each dicer-derived cluster — RNAconsensus","text":"data frame containing existing columns input data object, plus, additional column labeled sRNA_Consensus stating consensus small RNA type/class 20-24 nucleotides length.","code":""},{"path":"/reference/RNAconsensus.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define the sRNA consensus for each dicer-derived cluster — RNAconsensus","text":"function calculates consensus sRNA class based conditions supplied. Depending reasons analysis, different conditions supplied. instance, wish identify mobile sRNAs heterograft condition, compare replicates either heterograft control condition, supply names replicates heterograft condition. means function draw consensus sRNA class based replicates. method suggested mobile sRNA donor found control samples, hence, class determination control samples sRNA cluster irrelevant.","code":""},{"path":"/reference/RNAconsensus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define the sRNA consensus for each dicer-derived cluster — RNAconsensus","text":"","code":"data(\"sRNA_data\")  # define consensus sRNA classes. conditions <- c(\"TomEgg_1\", \"TomEgg_2\", \"TomEgg_3\")  # Run function to define sRNA class for each cluster. sRNA_data_summary <- RNAconsensus(data = sRNA_data,                                      conditions = conditions,                                     tidy=TRUE)"},{"path":"/reference/RNAdistribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the distribution of sRNA lengths — RNAdistribution","title":"Plot the distribution of sRNA lengths — RNAdistribution","text":"RNAdistribution plots distribution dicer-derived sRNA classes (20-24nt) across samples across sRNA consensus determined function [mobileRNA::RNAconsensus()].","code":""},{"path":"/reference/RNAdistribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the distribution of sRNA lengths — RNAdistribution","text":"","code":"RNAdistribution(   data,   samples = NULL,   style = c(\"bar\", \"line\", \"consensus\"),   facet = TRUE,   facet.arrange = 3,   colour = \"darkblue\",   together = TRUE,   consensus = FALSE,   relative = FALSE )"},{"path":"/reference/RNAdistribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the distribution of sRNA lengths — RNAdistribution","text":"data dataframe, one following functions already called: [mobileRNA::RNAimport()],[mobileRNA::RNAconsensus()]. samples character vector. Store names samples analyse plot. Argument required plotting individual sample replicates, either individually, overlapped together facet. Use sample replicate names present data frame (`data`), select samples wish plot. required plotting sRNA consensus using argument total=TRUE. style plotting option choose style either line graph bar chart represent data. * style=\"line\" line graph produced * style=\"bar\" produces bar graph * style=\"consensus\" produces line graph consenus sRNA conjunction consensus=TRUE facet Logical; forms matrix panels defined row column faceting variables. plots results sample bar-chart contains within single plot. number rows facet can changed using argument facet.arrange . Default facet = TRUE , plot sample separately facet = FALSE . facet.arrange numeric; value supplied define number columns include facet. argument piped ` ncol`  argument [ggplot2::facet_wrap()] define number columns. default, set 3. colour bar plot fill colour. Default colour \"darkblue\". together Logical; forms single line graph multiple lines represent sample replicates. Default together=TRUE. consensus Logical; plots distribution sRNA classes across identified dicer-derived clusters based consensus. See [mobileRNA::RNAconsensus()] function calculate consensus RNA class based experimental replicates. Default consensus=FALSE. relative Logical; calculates relative frequency consensus dicer-derived sRNA clusters. applicable  conjunction argument `consensus`, set consensus=TRUE. default, relative=FALSE.","code":""},{"path":"/reference/RNAdistribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the distribution of sRNA lengths — RNAdistribution","text":"function returns list containing results form data frame plot(s). access element, simply use \"$\" symbol, elements \"data\" \"plot\" appear. `samples` argument allows uses plot specific samples single plot (facet bar plot line graph). can encourage closer comparison sample replicates.","code":""},{"path":"/reference/RNAdistribution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot the distribution of sRNA lengths — RNAdistribution","text":"function can used plot variety different comparisons plots. can used plot distribution sRNA classes within sample replicate, can represented bar chart style=\"bar\" line graph style=\"line\". plots can represented individually single plot facet facet=\"TRUE\" default. plot sRNA dicer-derived clusters identified sample, function extracts information RNA summary data calculates total number RNA class identified within sample, samples. Alternatively, function allows plot line graph sample together, overlapped single graph total=\"TRUE\". option bar plots. final option, plot total consensus dicer-derived sRNA clusters across experimental conditions, function pulls consensus call column created [RNAconsensus()] function working data frame.","code":""},{"path":"/reference/RNAdistribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the distribution of sRNA lengths — RNAdistribution","text":"","code":"data('sRNA_data')  p1 <- RNAdistribution(data = sRNA_data, style = \"line\")   p1.2 <- RNAdistribution(data = sRNA_data, style = \"line\",                         samples = c(\"TomEgg_1\", \"TomEgg_2\", \"TomEgg_3\"))  p2 <- RNAdistribution(data = sRNA_data, style = \"line\", together =FALSE ) #> Printing plots as facet for samples   p3 <- RNAdistribution(data = sRNA_data, style = \"bar\") #> Printing plots as facet for samples: TomEgg_1, TomEgg_2, TomEgg_3, TomTom_1, TomTom_2, TomTom_3  #>    Class TomEgg_1 TomEgg_2 TomEgg_3 TomTom_1 TomTom_2 TomTom_3 #> 1:    20     1684     1407     1303     2489     3099     1921 #> 2:    21     4893     4523     4152     5583     6074     4380 #> 3:    22     4746     4780     4746     6476     6463     4674 #> 4:    23    20420    17104    19629    26991    28826    20827 #> 5:    24   126558   110332   115618   140056   115277   109911  p3.2 <- RNAdistribution(data = sRNA_data, style = \"bar\",                        samples = c(\"TomEgg_1\", \"TomEgg_2\", \"TomEgg_3\")) #> Printing plots as facet for samples: TomEgg_1, TomEgg_2, TomEgg_3, TomTom_1, TomTom_2, TomTom_3  #>    Class TomTom_1 TomTom_2 TomTom_3 #> 1:    20     2489     3099     1921 #> 2:    21     5583     6074     4380 #> 3:    22     6476     6463     4674 #> 4:    23    26991    28826    20827 #> 5:    24   140056   115277   109911  p4 <- RNAdistribution(data = sRNA_data, style = \"bar\", facet = FALSE) #> Printing plots for samples: TomEgg_1, TomEgg_2, TomEgg_3, TomTom_1, TomTom_2, TomTom_3 #> $TomEgg_1  #>  #> $TomEgg_2  #>  #> $TomEgg_3  #>  #> $TomTom_1  #>  #> $TomTom_2  #>  #> $TomTom_3  #>  #>    Class TomEgg_1 TomEgg_2 TomEgg_3 TomTom_1 TomTom_2 TomTom_3 #> 1:    20     1684     1407     1303     2489     3099     1921 #> 2:    21     4893     4523     4152     5583     6074     4380 #> 3:    22     4746     4780     4746     6476     6463     4674 #> 4:    23    20420    17104    19629    26991    28826    20827 #> 5:    24   126558   110332   115618   140056   115277   109911  p5 <- RNAdistribution(data = sRNA_data, style = \"bar\",                       facet = TRUE, facet.arrange = 2 ) #> Printing plots as facet for samples: TomEgg_1, TomEgg_2, TomEgg_3, TomTom_1, TomTom_2, TomTom_3  #>    Class TomEgg_1 TomEgg_2 TomEgg_3 TomTom_1 TomTom_2 TomTom_3 #> 1:    20     1684     1407     1303     2489     3099     1921 #> 2:    21     4893     4523     4152     5583     6074     4380 #> 3:    22     4746     4780     4746     6476     6463     4674 #> 4:    23    20420    17104    19629    26991    28826    20827 #> 5:    24   126558   110332   115618   140056   115277   109911  data(\"sRNA_data_summary\") p6 <- RNAdistribution(data = sRNA_data_summary, style = \"consensus\", consensus = TRUE)"},{"path":"/reference/RNAfeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribution of sRNA cluster loci across genomic features — RNAfeatures","title":"Distribution of sRNA cluster loci across genomic features — RNAfeatures","text":"Calculates percentage sRNA dicer-derived clusters overlap genomic features, including 2-kb promoter regions, repeat regions, exons, introns, 3'/'5 untranslated regions.","code":""},{"path":"/reference/RNAfeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribution of sRNA cluster loci across genomic features — RNAfeatures","text":"","code":"RNAfeatures(data, annotation, repeats = NULL, percentage = TRUE)"},{"path":"/reference/RNAfeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distribution of sRNA cluster loci across genomic features — RNAfeatures","text":"data data frame; containing rows potential dicer-derived clusters including columns supply genomic coordinates, `chr` supplies chromosome number, `start` `end` supply coordinates. annotation path, URL, connection GFFFile object. genome reference annotation file (.gff/.gff1/.gff2/.gff3). repeats path, URL, connection GFFFile object. genome reference annotation file, specifically contains information repeat sequences genome (.gff/.gff1/.gff2/.gff3). default, required, however specific repeats annotation file genome suggested supply . percentage returns results percentage total, percentage = TRUE (default). percentage = FALSE, results returned count value representing number sRNA clusters overlap given genomic feature.","code":""},{"path":"/reference/RNAfeatures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Distribution of sRNA cluster loci across genomic features — RNAfeatures","text":"function calculates number percentage sRNA dicer-derived clusters overlap genomic features based genomic coordinates. outputted either matrix data frame, respectively. function can utilised different steps analysis, particularly powerful observing genomic location potential mobile sRNA, can overlapped specific genome rather merged annotation file.","code":""},{"path":"/reference/RNAfeatures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distribution of sRNA cluster loci across genomic features — RNAfeatures","text":"","code":"if (FALSE) {  dis_features <- RNAfeatures(data = sRNA_data_summary,                        annotation = \"./annotation/eggplant_genome.gff3\",                        repeats = \"./annotation/eggplant_genome_repeats.gff3\") }"},{"path":"/reference/RNAimport.html","id":null,"dir":"Reference","previous_headings":"","what":"Import and organise sRNAseq or mRNA data sets — RNAimport","title":"Import and organise sRNAseq or mRNA data sets — RNAimport","text":"Load organise either sRNAseq mRNAseq results single dataframe containing experimental replicates specified rows represent either sRNA locus gene, respectively.","code":""},{"path":"/reference/RNAimport.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import and organise sRNAseq or mRNA data sets — RNAimport","text":"","code":"RNAimport(   input = c(\"sRNA\", \"mRNA\"),   directory,   samples,   report = TRUE,   tidy = TRUE )"},{"path":"/reference/RNAimport.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import and organise sRNAseq or mRNA data sets — RNAimport","text":"input string; define type Next-Generation Sequencing dataset originates , either \"sRNA\" \"mRNA\" valid inputs. directory Path directory containing sample folders. NOTE: Following suggested pre-processing steps, can found second alignment folders. samples Vector characters naming sample names correlating outputted folders located `directory` argument path. report Logical; prompts progress. tidy Logical; removes genes analysis zero counts across replicates.","code":""},{"path":"/reference/RNAimport.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import and organise sRNAseq or mRNA data sets — RNAimport","text":"Supply directory folder storing various sample replicate folders produced ShortStack analysis. Within sample replicate folder, \"Result.txt\". file contains many different columns, analysis columns interest  \"Locus\", \"DicerCall\", \"Reads\", \"RPM\" imported loads new data frame. Note \"Reads\" converted \"Counts\" output function. Locus contains genomic locations clusters, Dicercall contains likely size cluster, Reads contains number reads mapped cluster (recommended use unique mapping, hence number uniquely mapped reads, ie, including multimapped reads). Lastly, RPM contains Reads per Million score. \"RNAimport\" takes results  pre-processed sRNAseq data mapped undertaken cluster analysis ShortStack, organises  single data frame. row represent sRNA dicer-derived cluster  within analysis columns 1 - 5 supply information cluster  including locus, separated coordinates (chromosome, start, end) cluster name. columns represent data imported samples including DicerCall, Counts RPM. DicerCall represents size abundant small RNA size based parameter used ShortStack. Count column represents number aligned sRNA-seq reads overlap locus. RPM represents reads per million. replicate included analysis, columns labeled type name sample, example, sample called \"Sample1\", information sample stored columns DicerCall_Sample1, Count_Sample1 RPM_Sample1.","code":""},{"path":"/reference/RNAimport.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import and organise sRNAseq or mRNA data sets — RNAimport","text":"","code":"if (FALSE) {  # import sRNAseq data df_sRNA <- RNAimport(input = \"sRNA\",                      directory = \"./analysis/sRNA_mapping_results/\",                      samples = c( \"TomEgg_1\", \"TomEgg_2\", \"TomEgg_3\",                                  \"TomTom_1\" , \"TomTom_2\" , \"TomTom_3\"))  # import mRNAseq data df_mRNA <- RNAimport(input = \"mRNA\",                      directory = \"./analysis/mRNA_counts/\",                      samples = c( \"TomEgg_1\", \"TomEgg_2\", \"TomEgg_3\",                                   \"TomTom_1\" , \"TomTom_2\" , \"TomTom_3\"))  }"},{"path":"/reference/RNAloci.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute complete list of sRNA dicer-derived cluster loci — RNAloci","title":"Compute complete list of sRNA dicer-derived cluster loci — RNAloci","text":"Collates identified sRNA dicer-derived clusters across multiple sample replicates.","code":""},{"path":"/reference/RNAloci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute complete list of sRNA dicer-derived cluster loci — RNAloci","text":"","code":"RNAloci(files, out, samples)"},{"path":"/reference/RNAloci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute complete list of sRNA dicer-derived cluster loci — RNAloci","text":"files Path directory containing ShortStack mapping results. Path directory save outputted annotation files, include name output file, including file extension (.txt`) samples character vector containing names samples analysis. match sample folder names created mapping step one, outputted Shortstack.","code":""},{"path":"/reference/RNAloci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute complete list of sRNA dicer-derived cluster loci — RNAloci","text":"plain text file (.txt) assigned variable, dataframe saved global environment. output contains two columns, `Locus` containing genomic coordinates dicer-derived cluster `Cluster` contains given name dicer-derived cluster.","code":""},{"path":"/reference/RNAloci.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute complete list of sRNA dicer-derived cluster loci — RNAloci","text":"Based output Shortstack, function pulls loci dicer-derived clusters within sample, supplied function, merges loci single data frame. function utilises ShortStack_All.gff3 file produced mapping clustering analysis ShortStack. function outputs data frame global environment assigned variable/object, regardless outputs data frame plain text file given directory.","code":""},{"path":"/reference/RNAloci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute complete list of sRNA dicer-derived cluster loci — RNAloci","text":"","code":"if (FALSE) {   folder <- \"./workplace/alignment_unique_one/\" save_folder <- \"./workplace/reference/LociInfo.txt\"  conditions <- c(\"TomEgg_1\",\"TomEgg_2\",\"TomEgg_3\",                  \"TomTom_1\",\"TomTom_2\", \"TomTom_3\")   Loci_info <- RNAloci(files = folder,                          out = save_folder,                          samples = conditions)  }"},{"path":"/reference/RNAmean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate mean RPM and mean Count across given samples — RNAmean","title":"Calculate mean RPM and mean Count across given samples — RNAmean","text":"Using data, function calculates mean RPM Counts across specific samples.","code":""},{"path":"/reference/RNAmean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate mean RPM and mean Count across given samples — RNAmean","text":"","code":"RNAmean(data, conditions = NULL)"},{"path":"/reference/RNAmean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate mean RPM and mean Count across given samples — RNAmean","text":"data data frame, see [mobileRNA::RNAimport()] produce organised object sample data. conditions Character vector; represent sample names. supplied, function calculate means across samples dataframe.","code":""},{"path":"/reference/RNAmean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate mean RPM and mean Count across given samples — RNAmean","text":"data frame containing existing columns input data object, plus, additional columns. default, FPKM means stored column named `mean_RPM`, count means stored column names `mean_Count`.s","code":""},{"path":"/reference/RNAmean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate mean RPM and mean Count across given samples — RNAmean","text":"","code":"data(\"sRNA_data\") # across specific samples selected_samples <- c(\"TomEgg_1\", \"TomEgg_2\", \"TomEgg_3\")  means <- RNAmean(data = sRNA_data, conditions = selected_samples)  # for all samples means <- RNAmean(data = sRNA_data)"},{"path":"/reference/RNAmergeAnnotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge two GFF genome annotation files — RNAmergeAnnotations","title":"Merge two GFF genome annotation files — RNAmergeAnnotations","text":"Merges two genomes annotation files (`GFF format`) one single GFF file saved desired directory.","code":""},{"path":"/reference/RNAmergeAnnotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge two GFF genome annotation files — RNAmergeAnnotations","text":"","code":"RNAmergeAnnotations(   annotationA,   annotationB,   out_dir,   abbreviationAnnoA = \"A\",   abbreviationAnnoB = \"B\",   replace_chr_names = TRUE )"},{"path":"/reference/RNAmergeAnnotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge two GFF genome annotation files — RNAmergeAnnotations","text":"annotationA path  base::connection() genome annotation file GFF3 format annotationB path  base::connection() genome annotation file GFF3 format out_dir either character string base::connections() open writing. Place path output directory \"\", including file output name extension either `.gff` `.gff3`. abbreviationAnnoA string placed \"\", replace chromosome names within annotationA.Default set \"\". abbreviationAnnoB string placed \"\", replace chromosome names within annotationB.Default set \"B\". replace_chr_names logical value indicating whether chromosome names supplied annotation files altered . default, chromosome names altered.","code":""},{"path":"/reference/RNAmergeAnnotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge two GFF genome annotation files — RNAmergeAnnotations","text":"function output individually altered annotation files, plus, merged annotation file made two altered files. altered annotation files contain either default custom alterations chromosome names written original file connection addition \"_altered.gff3\" end file name.  merged annotation file outputted global object variable assigned, well writing merged annotation file GFF format give output directory.","code":""},{"path":"/reference/RNAmergeAnnotations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge two GFF genome annotation files — RNAmergeAnnotations","text":"functions primary goal merge two GFF files, however, merging genomic files critical two genomes distinguishable chromosome names. default setting, function extracts chromosome names given GFF file adds ID chromosome name removes periods. function requires input two reference annotation genomes, one represents `annotationA` represents `annotationB`. default, function rename chromosome names `annotationA` \"\". example, A0, A1 , A2 etc. set custom chromosome name `annotationA` alter argument abbreviationAnnoA. ,  `annotationB` default chromosome names named \"B\", example, B0, B1, B2 etc. set custom chromosome name `annotationB` alter argument abbreviationAnnoB. function can  draw chromosome number within given GFF file, remove prior character numerical values, replace supplied string. IMPORTANT:  genome reference annotation species must chromosomes matching names. critical used [mobileRNA::RNAmergeGenomes()] function create merged reference genome, treat input annotations way.","code":""},{"path":"/reference/RNAmergeAnnotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge two GFF genome annotation files — RNAmergeAnnotations","text":"","code":"if (FALSE) { merged_anno <- RNAannotationMerge(annotationA = \"./workplace/reference/ref1_annotation.gff3\",             annotationB = \"./workplace/reference/ref2_annotation.gff3\",             out_dir = \"./workplace/reference/merge/merged_annotation.gff3\")  ## or, to set specific changes to chromosome names. annotationA represents ## the Solanum lycopersicum and the chromosomes will be abbreviated to `SL`, ## and annotationB represents Solanum melongena and the chromosomes will be ## abbreviated to `SM`.  merged_anno_2 <- RNAannotationMerge(annotationA = \"./workplace/reference/ref1_annotation.gff3\",             annotationB = \"./workplace/reference/ref2_annotation.gff3\",             out_dir = \"./workplace/reference/merge/merged_annotation.gff3\",             abbreviationAnnoA = \"SL\",             abbreviationAnnoB = \"SM\")    }"},{"path":"/reference/RNAmergeGenomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge two FASTA reference genomes into one — RNAmergeGenomes","title":"Merge two FASTA reference genomes into one — RNAmergeGenomes","text":"Merges two reference genomes (.fa/.fasta). one single reference modified chromosome names ensure distinguishability.","code":""},{"path":"/reference/RNAmergeGenomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge two FASTA reference genomes into one — RNAmergeGenomes","text":"","code":"RNAmergeGenomes(   genomeA,   genomeB,   out_dir,   abbreviationGenomeA = \"A\",   abbreviationGenomeB = \"B\",   replace_chr_names = TRUE )"},{"path":"/reference/RNAmergeGenomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge two FASTA reference genomes into one — RNAmergeGenomes","text":"genomeA path  base::connection() genome reference file FASTA format (.fa/.fasta). File may supplied compressed .gzip extension. genomeB path  base::connection() genome reference file FASTA format (.fa/.fasta). File may supplied compressed .gzip extension. out_dir either character string base::connections() open writing. Place path output directory \"\", including file output name. abbreviationGenomeA string placed \"\", replace chromosome names within genomeA.Default set \"\". abbreviationGenomeB string placed \"\", replace chromosome names within genomeB.Default set \"B\". replace_chr_names logical value indicating whether chromosome names supplied annotation files altered . default, chromosome names altered.","code":""},{"path":"/reference/RNAmergeGenomes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge two FASTA reference genomes into one — RNAmergeGenomes","text":"functions primary goal merge two FASTA files, however, merging genomic files critical two genomes distinguishable chromosome names. default setting, function extracts chromosome names given FASTA file alters name retaining identifying number. function requires input two reference genomes, one represents `Genome-` represents `Genome-B`. default, function rename chromosome names `Genome-` \"\". example, A0, A1 , A2 etc. set custom chromosome name `Genome-` alter argument abbreviationGenomeA. ,  `Genome-B` default chromosome names named \"B\", example, B0, B1, B2 etc. set custom chromosome name `Genome-` alter argument abbreviationGenomeB. function can  draw chromosome number within given GFF file, remove prior character numerical values, replace supplied string. IMPORTANT:  genome reference annotation species must chromosomes matching names. critical used [mobileRNA::RNAannotationMerge()] function create merged genome annotation,treat input references way.","code":""},{"path":"/reference/RNAmergeGenomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge two FASTA reference genomes into one — RNAmergeGenomes","text":"","code":"if (FALSE) { merged_reference <- RNAmergeGenomes(genomeA = \"./workplace/reference/ref1.fa\",             genomeB = \"./workplace/reference/ref2.fa\",             out_dir = \"./workplace/reference/merge/merged_ref.fa\")  ## or, to set specific changes to chromosome names. annotationA represents ## the Solanum lycopersicum and the chromosomes will be abbreviated to `SL`, ## and annotationB represents Solanum melongena and the chromosomes will be ## abbreviated to `SM`.  merged_reference2 <- RNAmergeGenomes(genomeA = \"./workplace/reference/ref1.fa\",             genomeB = \"./workplace/reference/ref2.fa\",             out_dir = \"./workplace/reference/merge/merged_ref.fa\",             abbreviationGenomeA = \"SL\",             abbreviationGenomeB = \"SM\")  }"},{"path":"/reference/RNAmobile.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify potential mobile sRNA molecules — RNAmobile","title":"Identify potential mobile sRNA molecules — RNAmobile","text":"function identify potential mobile small RNA molecules traveling one genotype another hetero-grafted system.","code":""},{"path":"/reference/RNAmobile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify potential mobile sRNA molecules — RNAmobile","text":"","code":"RNAmobile(   data,   controls,   id,   task = NULL,   statistical = FALSE,   padj = 0.05,   p.value = NULL )"},{"path":"/reference/RNAmobile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify potential mobile sRNA molecules — RNAmobile","text":"data Numeric data frame controls Character vector; containing names control samples. id character string related chromosomes particular genome. distinguishing feature genome interest non-interest chromosome name (`chr` column). task option keep remove chromosomes containing identifying string. keep chromosomes ID, set task=keep. remove, set `task=\"remove\"`. default, task set `keep`. statistical TRUE, undertake statistical filtering based p-value adjusted p-value threshold stated `padj` `p.value`. Default set FALSE. Requires presence columns containing statistical data. order filter adjusted p-value, column named `padjusted` must present. Similarly, filter p-value, column named `pvalue` must present. See [mobileRNA::RNAanalysis()] calculate statistical values. padj user defined numeric value represent adjusted p-value threshold define statistic significance. Defaults set 0.05.mobile molecules adjusted p-values equal lower specified returned. p.value user defined numeric value represent p-value threshold define statistic significance. default value, set instead using adjusted p-value filter molecules. mobile molecules p-values equal lower specified returned.","code":""},{"path":"/reference/RNAmobile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify potential mobile sRNA molecules — RNAmobile","text":"data-frame containing statistically significant mobile small RNA molecules.","code":""},{"path":"/reference/RNAmobile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify potential mobile sRNA molecules — RNAmobile","text":"function undertakes two different roles. First, selects sRNA cluster mapped particular genome. either keeping removing sRNA mapped chromosomes. Hence, function work two genomes distinguishable chromosome names. second step, selecting clusters mapped genome interest, removes sRNA clusters incorrectly mapped. clusters counts RPM values control samples (ie. genome destination tissue hetero-graft condition). samples counts sRNA originates different genotype control. function also allows statistical analysis based results collect differential analysis total dataset using function [mobileRNA::RNAanalysis()]. features enables filtering sRNA clusters meet specific p-value adjusted p-values.","code":""},{"path":"/reference/RNAmobile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify potential mobile sRNA molecules — RNAmobile","text":"","code":"## DESeq2 example (24-nt & 21/22-nt sRNA) data(\"sRNA_24_DESeq2\") data(\"sRNA_1224_DESeq2\") #> Warning: data set ‘sRNA_1224_DESeq2’ not found   # vector of control names controls <- c(\"TomTom_1\", \"TomTom_2\", \"TomTom_3\")  # Identify mobile 24-nt sRNA from eggplant genome: # remove clusters associated to tomato sRNA_24_mobile_DEseq2 <- RNAmobile(data = sRNA_24_DESeq2,                                          controls = controls,                                          id = \"SL40\",                                          task = \"remove\")  # Identify mobile 21/22-nt sRNA from eggplant genome: # remove clusters associated to tomato sRNA_2122_mobile_DEseq2  <- RNAmobile(data = sRNA_2122_DESeq2,                                              controls = controls,                                              id = \"SL40\",                                              task = \"remove\")       ## Mobile molecules from the edgeR example  data(\"sRNA_24_edgeR\") data(\"sRNA_2122_edgeR\") # vector of control names controls <- c(\"TomTom_1\", \"TomTom_2\", \"TomTom_3\")   # Identify mobile 24-nt sRNA from eggplant genome: # remove clusters associated to tomato sRNA_24_mobile_edgeR <- RNAmobile(data = sRNA_24_edgeR,                                          controls = controls,                                          id = \"SL40\",                                          task = \"remove\")  # Identify mobile 21/22-nt sRNA from eggplant genome: # remove clusters associated to tomato sRNA_2122_mobile_edgeR <- RNAmobile(data = sRNA_2122_edgeR,                                            controls = controls,                                            id = \"SL40\",                                            task = \"remove\")"},{"path":"/reference/RNAsubset.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset data to select a specific small RNA population — RNAsubset","title":"Subset data to select a specific small RNA population — RNAsubset","text":"Creates data-frame containing desired sRNA class(s) based consensus sRNA determination.","code":""},{"path":"/reference/RNAsubset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset data to select a specific small RNA population — RNAsubset","text":"","code":"RNAsubset(data, type, sig = FALSE, ...)"},{"path":"/reference/RNAsubset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset data to select a specific small RNA population — RNAsubset","text":"data numerical data-frame containing sample data, defined consensus sRNA class/type sRNA dicer-derived cluster (see [mobileRNA::RNAconsensus()]. type number represent type small RNA population subset . sig Parameter filter select significant sRNA. sig=TRUE, data filtered based p-adjusted < 0.05 significance threshold. ... Related number `type` argument can value 20-24. select, 24-nt sRNA, state 24. Multiple values can inputted, instance 21 22 can stated select .","code":""},{"path":"/reference/RNAsubset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subset data to select a specific small RNA population — RNAsubset","text":"See [mobileRNA::RNAconsensus()] information defining sRNA type cluster. function allows choice filtered data statistical significance based differential expression analysis, see [mobileRNA::RNAanalysis()]. Set sig=TRUE filtered significance (p-adjusted).","code":""},{"path":"/reference/RNAsubset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset data to select a specific small RNA population — RNAsubset","text":"","code":"data(\"sRNA_data\")  ##  define consensus sRNA classes. samples <- c(\"TomEgg_1\", \"TomEgg_2\", \"TomEgg_3\")  # Define consensus sRNA_data_summary <- RNAconsensus(data = sRNA_data,                                      conditions = samples)  # Subset data for  24-nt sRNAs sRNA_24 <- RNAsubset(sRNA_data_summary, type = 24)   # Subset data for 24 21/22-nt sRNAs sRNA_2122 <- RNAsubset(sRNA_data_summary, type = c(21, 22))  # You can subset by any combination of classes. For example, a dataset # of 23-nt & 24-nt sRNAs or just 20-nt sRNAs."},{"path":"/reference/mRNAimport.html","id":null,"dir":"Reference","previous_headings":"","what":"Import and organise mRNAseq data set — mRNAimport","title":"Import and organise mRNAseq data set — mRNAimport","text":"Organises mRNAseq counts data sample replicate single dataframe.","code":""},{"path":"/reference/mRNAimport.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import and organise mRNAseq data set — mRNAimport","text":"","code":"mRNAimport(directory, samples, report = TRUE, tidy = TRUE)"},{"path":"/reference/mRNAimport.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import and organise mRNAseq data set — mRNAimport","text":"directory Path directory containing sample folders. samples Vector characters naming sample names correlating outputted folders located `directory` argument path. report Logical; prompts progress. tidy Logical; removes genes analysis zero counts across replicates.","code":""},{"path":"/reference/mRNAimport.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import and organise mRNAseq data set — mRNAimport","text":"Supply directory folder storing plain text files sample replicate contain counts data. file draw directory based file names supplied samples argument, minus .txt extension. file names supplied represent sample across analysis, unless changed altering column names importation function. counts data composed two columns; first containing gene names, second containing counts. first column function output contains gene names identified across samples. columns represent counts sample replicate imported. sample name incorporated column name. example, sample called \"Sample1\", counts stored column called \"Count_Sample1\".","code":""},{"path":"/reference/mRNAimport.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import and organise mRNAseq data set — mRNAimport","text":"","code":"if (FALSE) {  df_mRNA <- RNAimport(input = \"mRNA\",                      directory = \"./analysis/mRNA_counts/\",                      samples = c( \"TomEgg_1\", \"TomEgg_2\", \"TomEgg_3\",                                   \"TomTom_1\" , \"TomTom_2\" , \"TomTom_3\"))  }"},{"path":"/reference/plotHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap using hierarchical clustering — plotHeatmap","title":"Heatmap using hierarchical clustering — plotHeatmap","text":"Plots heatmap hierarchical clustering via rlog transformation RPM data euclidean statistics.","code":""},{"path":"/reference/plotHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap using hierarchical clustering — plotHeatmap","text":"","code":"plotHeatmap(data, colours = NULL, dendogram = TRUE)"},{"path":"/reference/plotHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap using hierarchical clustering — plotHeatmap","text":"data Data frame containing FPKM values samples sRNA dicer-derived cluster interest. colours Colours display represent heatmap. Defaults [grDevices::heat.colors()] (heat.colors(100)). dendogram Logical; indicating whether include dendrogram clustering, retain clustering. Default, dendogram = TRUE include.","code":""},{"path":"/reference/plotHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heatmap using hierarchical clustering — plotHeatmap","text":"Produces list objects, including plot.","code":""},{"path":"/reference/plotHeatmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Heatmap using hierarchical clustering — plotHeatmap","text":"function create heatmap based hierarchical clustering FPKM values using euclidean statistics.","code":""},{"path":"/reference/plotHeatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heatmap using hierarchical clustering — plotHeatmap","text":"","code":"## DESeq2 example: mobile 24-nt & 21/22-nt sRNA   # plot heatmap of likely mobile 24-nt sRNA  data(\"sRNA_24_mobile_DESeq2\")  p1 <-  plotHeatmap(sRNA_24_mobile_DESeq2)    # plot heatmap of likely mobile 24-nt sRNA  data(\"sRNA_2122_mobile_DESeq2\")  p2 <-  plotHeatmap(sRNA_2122_mobile_DESeq2)     ## edgeR example: mobile 24-nt & 21/22-nt sRNA   # plot heatmap of likely mobile 24-nt sRNA  data(\"sRNA_24_mobile_edgeR\")  p3 <-  plotHeatmap(sRNA_24_mobile_edgeR)    # plot heatmap of likely mobile 24-nt sRNA  data(\"sRNA_2122_mobile_edgeR\")  p4 <-  plotHeatmap(sRNA_2122_mobile_edgeR)"},{"path":"/reference/plotSampleDistance.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample quality control heatmap plot — plotSampleDistance","title":"Sample quality control heatmap plot — plotSampleDistance","text":"function draw simple hierarchical clustered heatmap observe sample distance. Ideal quality control sequencing data.","code":""},{"path":"/reference/plotSampleDistance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample quality control heatmap plot — plotSampleDistance","text":"","code":"plotSampleDistance(data, vst = FALSE)"},{"path":"/reference/plotSampleDistance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample quality control heatmap plot — plotSampleDistance","text":"data data frame; data set containing raw data produced output [mobileRNA::RNAconsensus()] /[mobileRNA:RNAsubset()] vst Logical; Variance stabilizing transformation. default, function uses regularized log transformation data set, however, suit experimental designs.","code":""},{"path":"/reference/plotSampleDistance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample quality control heatmap plot — plotSampleDistance","text":"blue scale heatmap illustrating sample distance.","code":""},{"path":"/reference/plotSampleDistance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample quality control heatmap plot — plotSampleDistance","text":"special conditions, regularized log transformation suit experimental design. example, experimental design without replicates. instance, preferable change default setting switch variance stabilizing transformation method (vst=TRUE).","code":""},{"path":"/reference/plotSampleDistance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample quality control heatmap plot — plotSampleDistance","text":"","code":"data(\"sRNA_24\") plotSampleDistance(sRNA_24) #> Checking data #> Transforming the count data to the log2 scale #> Calculating distance matrix #> Creating sample distance plot"},{"path":"/reference/plotSamplePCA.html","id":null,"dir":"Reference","previous_headings":"","what":"PCA plot to illustrate sample distance. — plotSamplePCA","title":"PCA plot to illustrate sample distance. — plotSamplePCA","text":"function draw principal component analysis (PCA) plot.  function undertakes rlog transformation data  unbiased manner (blind=TRUE).","code":""},{"path":"/reference/plotSamplePCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PCA plot to illustrate sample distance. — plotSamplePCA","text":"","code":"plotSamplePCA(data, group, vst = FALSE)"},{"path":"/reference/plotSamplePCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PCA plot to illustrate sample distance. — plotSamplePCA","text":"data class data.frame; data set containing raw data produced output [mobileRNA::RNAconsensus()] /[mobileRNA::RNAsubset()]. group character vector; contains experimental conditions replicate. IMPORTANT: Ensure order replicates found data frame supplied `data` argument (left right). vst logical; Variance stabilizing transformation. default, function uses regularized log transformation data set, however, suit experimental designs.","code":""},{"path":"/reference/plotSamplePCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PCA plot to illustrate sample distance. — plotSamplePCA","text":"PCA plot show sample distance.","code":""},{"path":"/reference/plotSamplePCA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PCA plot to illustrate sample distance. — plotSamplePCA","text":"function utilises DESeq2 package organise plot data. organises data DESeqDataSet undergoes log transformation results used undertake PCA analysis. results plotted principle components 1 2. special conditions, regularized log transformation suit experimental design. example, experimental design without replicates. instance, preferable change default setting switch variance stabilizing transformation method (`vst=TRUE`).","code":""},{"path":"/reference/plotSamplePCA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PCA plot to illustrate sample distance. — plotSamplePCA","text":"","code":"data(sRNA_24)  groups <- c(\"Tomato/Eggplant\", \"Tomato/Eggplant\", \"Tomato/Eggplant\",             \"Tomato/Tomato\",   \"Tomato/Tomato\", \"Tomato/Tomato\") p <-  plotSamplePCA(data = sRNA_24,group = groups ) #> Checking and organising data #>   Note: levels of factors in the design contain characters other than #>   letters, numbers, '_' and '.'. It is recommended (but not required) to use #>   only letters, numbers, and delimiters '_' or '.', as these are safe characters #>   for column names in R. [This is a message, not a warning or an error] #> Transforming the count data to the log2 scale #> Transforming the count data to the log2 scale #> Organising principal component analysis"},{"path":"/reference/sRNA_2122.html","id":null,"dir":"Reference","previous_headings":"","what":"sRNA_2122 — sRNA_2122","title":"sRNA_2122 — sRNA_2122","text":"sRNA_2122","code":""},{"path":"/reference/sRNA_2122.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sRNA_2122 — sRNA_2122","text":"","code":"data(sRNA_2122)"},{"path":"/reference/sRNA_2122_DESeq2.html","id":null,"dir":"Reference","previous_headings":"","what":"sRNA_2122_DESeq2 — sRNA_2122_DESeq2","title":"sRNA_2122_DESeq2 — sRNA_2122_DESeq2","text":"sRNA_2122_DESeq2","code":""},{"path":"/reference/sRNA_2122_DESeq2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sRNA_2122_DESeq2 — sRNA_2122_DESeq2","text":"","code":"data(sRNA_2122_DESeq2)"},{"path":"/reference/sRNA_2122_edgeR.html","id":null,"dir":"Reference","previous_headings":"","what":"sRNA_2122_edgeR — sRNA_2122_edgeR","title":"sRNA_2122_edgeR — sRNA_2122_edgeR","text":"sRNA_2122_edgeR","code":""},{"path":"/reference/sRNA_2122_edgeR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sRNA_2122_edgeR — sRNA_2122_edgeR","text":"","code":"data(sRNA_2122_edgeR)"},{"path":"/reference/sRNA_2122_mobile_DESeq2.html","id":null,"dir":"Reference","previous_headings":"","what":"sRNA_2122_mobile_DESeq2 — sRNA_2122_mobile_DESeq2","title":"sRNA_2122_mobile_DESeq2 — sRNA_2122_mobile_DESeq2","text":"sRNA_2122_mobile_DESeq2","code":""},{"path":"/reference/sRNA_2122_mobile_DESeq2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sRNA_2122_mobile_DESeq2 — sRNA_2122_mobile_DESeq2","text":"","code":"data(sRNA_2122_mobile_DESeq2)"},{"path":"/reference/sRNA_2122_mobile_edgeR.html","id":null,"dir":"Reference","previous_headings":"","what":"sRNA_2122_mobile_edgeR — sRNA_2122_mobile_edgeR","title":"sRNA_2122_mobile_edgeR — sRNA_2122_mobile_edgeR","text":"sRNA_2122_mobile_edgeR","code":""},{"path":"/reference/sRNA_2122_mobile_edgeR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sRNA_2122_mobile_edgeR — sRNA_2122_mobile_edgeR","text":"","code":"data(sRNA_2122_mobile_edgeR)"},{"path":"/reference/sRNA_24.html","id":null,"dir":"Reference","previous_headings":"","what":"sRNA_24 — sRNA_24","title":"sRNA_24 — sRNA_24","text":"sRNA_24","code":""},{"path":"/reference/sRNA_24.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sRNA_24 — sRNA_24","text":"","code":"data(sRNA_24)"},{"path":"/reference/sRNA_24_DESeq2.html","id":null,"dir":"Reference","previous_headings":"","what":"sRNA_24_DESeq2 — sRNA_24_DESeq2","title":"sRNA_24_DESeq2 — sRNA_24_DESeq2","text":"sRNA_24_DESeq2","code":""},{"path":"/reference/sRNA_24_DESeq2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sRNA_24_DESeq2 — sRNA_24_DESeq2","text":"","code":"data(sRNA_24_DESeq2)"},{"path":"/reference/sRNA_24_edgeR.html","id":null,"dir":"Reference","previous_headings":"","what":"sRNA_24_edgeR — sRNA_24_edgeR","title":"sRNA_24_edgeR — sRNA_24_edgeR","text":"sRNA_24_edgeR","code":""},{"path":"/reference/sRNA_24_edgeR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sRNA_24_edgeR — sRNA_24_edgeR","text":"","code":"data(sRNA_24_edgeR)"},{"path":"/reference/sRNA_24_mobile_DESeq2.html","id":null,"dir":"Reference","previous_headings":"","what":"sRNA_24_mobile_DESeq2 — sRNA_24_mobile_DESeq2","title":"sRNA_24_mobile_DESeq2 — sRNA_24_mobile_DESeq2","text":"sRNA_24_mobile_DESeq2","code":""},{"path":"/reference/sRNA_24_mobile_DESeq2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sRNA_24_mobile_DESeq2 — sRNA_24_mobile_DESeq2","text":"","code":"data(sRNA_24_mobile_DESeq2)"},{"path":"/reference/sRNA_24_mobile_edgeR.html","id":null,"dir":"Reference","previous_headings":"","what":"sRNA_24_mobile_edgeR — sRNA_24_mobile_edgeR","title":"sRNA_24_mobile_edgeR — sRNA_24_mobile_edgeR","text":"sRNA_24_mobile_edgeR","code":""},{"path":"/reference/sRNA_24_mobile_edgeR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sRNA_24_mobile_edgeR — sRNA_24_mobile_edgeR","text":"","code":"data(sRNA_24_mobile_edgeR)"},{"path":"/reference/sRNA_data.html","id":null,"dir":"Reference","previous_headings":"","what":"The `sRNA_data` data set — sRNA_data","title":"The `sRNA_data` data set — sRNA_data","text":"data sets represents results pre-processing. data organised using `sample_table` function.","code":""},{"path":"/reference/sRNA_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The `sRNA_data` data set — sRNA_data","text":"","code":"data(sRNA_data)"},{"path":"/reference/sRNA_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The `sRNA_data` data set — sRNA_data","text":"Tomato (Solanium lycopersicum) eggplant (Solanium melongena) used grafting partners hetero-grafting experiment. scion represented tomato rootstock represented eggplant. experiment used tomato self-graft control. dataset holds three replicates hetero-graft treatment (TomEgg_1, TomEgg_2, TomEgg_3) three replicates self-graft control (TomTom_1, TomTom_2, TomTom_3).","code":""},{"path":"/reference/sRNA_data_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"sRNA_data_summary — sRNA_data_summary","title":"sRNA_data_summary — sRNA_data_summary","text":"sRNA_data_summary","code":""},{"path":"/reference/sRNA_data_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sRNA_data_summary — sRNA_data_summary","text":"","code":"data(sRNA_data_summary)"},{"path":"/news/index.html","id":"mobilerna-100","dir":"Changelog","previous_headings":"","what":"mobileRNA 1.0.0","title":"mobileRNA 1.0.0","text":"Added NEWS.md file track changes package. Deployment 9 functions: dir_relocate() chr_checker() chr_punct() chr_sizes() merge_files() quality_check() find_overlap() sample_table() define_consensus() class_subset() frequency_plot() normalise_data() PCA_plot() heatmapQC_plot() DE_analysis() add_results() mobile_molecules() heatmap_plot()","code":""}]
